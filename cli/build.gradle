import java.text.SimpleDateFormat

plugins {
    id 'java'
    id 'application'
}

group = 'nkp.pspValidator.web.backend'
version '1.0.0'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    implementation 'commons-cli:commons-cli:1.3.1'
}

test {
    useJUnitPlatform()
}

application {
    // Define the main class for the application
    mainClassName = 'nkp.pspValidator.web.backend.cli.App'
    //into('classes') {
       // from('build') {
         //   include 'version.properties'
        //}
    //}
}

//https://www.mkyong.com/gradle/gradle-create-a-jar-file-with-dependencies/
task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'Komplexni validator CLI',
                'Implementation-Version': version,
                'Main-Class': 'nkp.pspValidator.web.backend.cli.App'
    }
    baseName = 'KomplexniValidatorWebCLI'
    //https://stackoverflow.com/questions/47910578/not-able-to-copy-configurations-dependencies-after-upgrading-gradle-plugin-for-a
    //from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    //from { configurations.implementation.collect { it.isDirectory() ? it : zipTree(it) } }
    //from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    from { configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar

    //into('classes/java/main/nkp/pspValidator/web/backend/cli') {
    into('nkp/pspValidator/web/backend/cli') {
        from('build') {
            include 'version.properties'
        }
    }
}

// Generate a properties file in build folder
task generateVersionProperties {
    doLast {
        def versionPropertiesFile = file("$buildDir/version.properties")
        versionPropertiesFile.text = "app.version=${project.version}\n"

        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss")
        String formattedTimestamp = dateFormat.format(new Date())
        versionPropertiesFile.append("build.timestamp=${formattedTimestamp}\n")
    }
}

processResources.dependsOn generateVersionProperties

task copyVersionProperties(type: Copy) {
    from "$buildDir/version.properties"
    //into "$buildDir/classes/nkp/pspValidator/web/backend/cli" // Adjust the path as needed
    into "$buildDir/classes/java/main/nkp/pspValidator/web/backend/cli" // Adjust the path as needed
}

applicationDistribution.into('config') {
    from copyVersionProperties
}